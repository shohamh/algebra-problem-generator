<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>Octokit</id>
    <version>0.24.0</version>
    <authors>GitHub</authors>
    <owners>GitHub</owners>
    <licenseUrl>https://github.com/octokit/octokit.net/blob/master/LICENSE.txt</licenseUrl>
    <projectUrl>https://github.com/octokit/octokit.net</projectUrl>
    <iconUrl>https://f.cloud.github.com/assets/19977/1441274/160fba8c-41a9-11e3-831d-61d88fa886f4.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>An async-based GitHub API client library for .NET</description>
    <summary>An async-based GitHub API client library for .NET</summary>
    <releaseNotes>**Features/Enhancements**
- Add `GetAll` method to `OrganizationsClient` - [#1469](https://github.com/octokit/octokit.net/pull/1469) via [malamour-work](https://github.com/malamour-work)
- Add missing fields to `Repository` class - `HasPages`, `SubscribersCount`, `Size` - [#1473](https://github.com/octokit/octokit.net/pull/1473) via [ryangribble](https://github.com/ryangribble)
- Allow base64 content for create/update file - [#1488](https://github.com/octokit/octokit.net/pull/1488) via [laedit](https://github.com/laedit)
- Add `HtmlUrl` field to `Milestone` class - [#1489](https://github.com/octokit/octokit.net/pull/1489) via [StanleyGoldman](https://github.com/StanleyGoldman)
- Add support for passing sort options to `IssueCommentsClient.GetAllForRepository()` - [#1501](https://github.com/octokit/octokit.net/pull/1501) via [pjc0247](https://github.com/pjc0247)
- Rename `PullRequest.Comment` to `PullRequest.ReviewComment` for better accuracy - [#1520](https://github.com/octokit/octokit.net/pull/1520) via [bmeverett](https://github.com/bmeverett)
- Introduce `AbuseException` - [#1528](https://github.com/octokit/octokit.net/pull/1528) via [SeanKilleen](https://github.com/SeanKilleen)
- Add `Id` field to `PullRequest` class - [#1537](https://github.com/octokit/octokit.net/pull/1537) via [YunLi1988](https://github.com/YunLi1988)
- Unparseable `ApiErrors` should now fall back to better default error messages - [#1540](https://github.com/octokit/octokit.net/pull/1540) via [SeanKilleen](https://github.com/SeanKilleen)

**Fixes**
- Fix errors in `ObservableEventsClient` caused by incorrect return types - [#1490](https://github.com/octokit/octokit.net/pull/1490) via [StanleyGoldman](https://github.com/StanleyGoldman)
- Add missing `SecurityCritical` attribute on `GetObjectData()` overrides - [#1493](https://github.com/octokit/octokit.net/pull/1493) via [M-Zuber](https://github.com/M-Zuber)
- Fix exceptions in Events API by adding missing event types to `EventInfo` enumeration - [#1536](https://github.com/octokit/octokit.net/pull/1536) via [lynnfaraday](https://github.com/lynnfaraday)
- Add new AccountType "Bot" to prevent deserialization errors - [#1541](https://github.com/octokit/octokit.net/pull/1541) via [ryangribble](https://github.com/ryangribble)
Documentation Updates**
- Clarify `ApiInfo` rate limiting usage in docs - [#1524](https://github.com/octokit/octokit.net/pull/1524) via [SeanKilleen](https://github.com/SeanKilleen)
- Clarify label coloring usage in docs - [#1530](https://github.com/octokit/octokit.net/pull/1530) via [SeanKilleen](https://github.com/SeanKilleen)

**Breaking Changes**
- Creating and Editing Issues (and PullRequests) using `NewIssue` and `IssueUpdate` requests
should now use the `Assignees` collection rather than the now deprecated 'Assignee` field.
Both fields can't be specified on the same request, so any code still using `Assignee` will
need to explicitly set `Assignees` to `null` to avoid Api validation errors.
- `OrganizationsClient.GetAll(string user)` has been marked obsolete in favour of
`OrganizationsClient.GetAllForUser(string user)`
- `PullRequest.Comment` has been marked obsolete in favour of `PullRequest.ReviewComment`
- Several `EventsClient` methods previously returned the incorrect `Activity` response class.
This has been corrected to `IssueEvent` which although is now correct could break calling
code that was written assuming this previous incorrect return type.</releaseNotes>
    <copyright>Copyright GitHub 2013</copyright>
    <tags>GitHub API Octokit linqpad-samples</tags>
    <dependencies>
      <group>
        <dependency id="Microsoft.Net.Http" />
      </group>
      <group targetFramework=".NETFramework4.5" />
      <group targetFramework=".NETCore4.5" />
      <group targetFramework=".NETPortable0.0-win81+wpa81" />
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System" targetFramework=".NETFramework4.5" />
      <frameworkAssembly assemblyName="System.Net.Http" targetFramework=".NETFramework4.5, .NETCore4.5" />
    </frameworkAssemblies>
  </metadata>
</package>